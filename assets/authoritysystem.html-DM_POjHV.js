import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as e,c as a,e as c}from"./app-7KT7HDzT.js";const n={},i=c('<h2 id="为什么需要权限管理-设计-权限模型的演进" tabindex="-1"><a class="header-anchor" href="#为什么需要权限管理-设计-权限模型的演进"><span>为什么需要权限管理？设计？权限模型的演进？</span></a></h2><p>保证数据安全，不同岗位和级别看到的数据和操作数据的限制是不一样的</p><p>RBAC模型：角色、用户、权限都是多对多关系</p><figure><img src="https://b.bdstatic.com/comment/I4MgmLj55Sgosm2EdtLMDQf6b307cc01dbe865b7a8eab1ade21b7d.png" alt="RBAC模型.png" tabindex="0"><figcaption>RBAC模型.png</figcaption></figure><p>角色继承的RBAC模型：下级角色只有一个上级角色，上级角色可以有多个下级角色。并且可以额外拥有其他权限</p><figure><img src="https://b.bdstatic.com/comment/I4MgmLj55Sgosm2EdtLMDQ1e423b97f6fa092dedf8f329a288db84.png" alt="RBAC1模型.png" tabindex="0"><figcaption>RBAC1模型.png</figcaption></figure><p>带约束的RBAC模型：角色互斥、基数约束(限制数量)、先决条件约束(先用有A角色才能拥有B角色)等</p><figure><img src="https://b.bdstatic.com/comment/I4MgmLj55Sgosm2EdtLMDQ10feea0cdf00ae97b3e9c109c8743de5.png" alt="RBAC2模型.png" tabindex="0"><figcaption>RBAC2模型.png</figcaption></figure><h2 id="用户划分" tabindex="-1"><a class="header-anchor" href="#用户划分"><span>用户划分</span></a></h2><p>用户、权限组：批量把角色、权限赋予给用户、角色<br><img src="https://b.bdstatic.com/comment/I4MgmLj55Sgosm2EdtLMDQ2d920358e1503293a949aa22594d7820.png" alt="用户组与权限组.png"></p><h2 id="组织" tabindex="-1"><a class="header-anchor" href="#组织"><span>组织</span></a></h2><p>实现权限分配的自动化：按照组织来分配角色，用户分到组织后自动获取该组织下所有权限。无需人工干预。<br> 控制数据权限：组织成员只能看到本组织下的数据</p><figure><img src="https://b.bdstatic.com/comment/I4MgmLj55Sgosm2EdtLMDQea97800caf0aad24faf83ecc078dfdd6.png" alt="组织.png" tabindex="0"><figcaption>组织.png</figcaption></figure><h2 id="理想rbac模型" tabindex="-1"><a class="header-anchor" href="#理想rbac模型"><span>理想RBAC模型</span></a></h2><p>用户表、角色表、权限表、用户-角色关系表和角色-权限关系表。用户和角色、角色和权限是多对多的关系<br><img src="https://b.bdstatic.com/comment/I4MgmLj55Sgosm2EdtLMDQ87c51601cfd2a23d277594f77aff8db7.png" alt="理想RBAC模型.png"></p><h2 id="标准rbac模型表设计" tabindex="-1"><a class="header-anchor" href="#标准rbac模型表设计"><span>标准RBAC模型表设计</span></a></h2><p><img src="https://b.bdstatic.com/comment/I4MgmLj55Sgosm2EdtLMDQ2a7a628a1022111565129984e09c60d1.png" alt="标准RBAC模型表设计.png"><br><img src="https://b.bdstatic.com/comment/I4MgmLj55Sgosm2EdtLMDQ07b3714f6edf7b20637d185c4d9cdfa4.png" alt="理想RBAC模型表设计.png"></p>',17),d=[i];function p(s,o){return e(),a("div",null,d)}const r=t(n,[["render",p],["__file","authoritysystem.html.vue"]]),b=JSON.parse('{"path":"/interview/scenedesign/authoritysystem.html","title":"权限系统设计","lang":"zh-CN","frontmatter":{"title":"权限系统设计","date":"2023-01-01T00:00:00.000Z","tags":"面试","categories":"面试","description":"为什么需要权限管理？设计？权限模型的演进？ 保证数据安全，不同岗位和级别看到的数据和操作数据的限制是不一样的 RBAC模型：角色、用户、权限都是多对多关系 RBAC模型.pngRBAC模型.png 角色继承的RBAC模型：下级角色只有一个上级角色，上级角色可以有多个下级角色。并且可以额外拥有其他权限 RBAC1模型.pngRBAC1模型.png 带约束...","head":[["meta",{"property":"og:url","content":"https://javaguide.cn/interview/scenedesign/authoritysystem.html"}],["meta",{"property":"og:site_name","content":"JavaGuide"}],["meta",{"property":"og:title","content":"权限系统设计"}],["meta",{"property":"og:description","content":"为什么需要权限管理？设计？权限模型的演进？ 保证数据安全，不同岗位和级别看到的数据和操作数据的限制是不一样的 RBAC模型：角色、用户、权限都是多对多关系 RBAC模型.pngRBAC模型.png 角色继承的RBAC模型：下级角色只有一个上级角色，上级角色可以有多个下级角色。并且可以额外拥有其他权限 RBAC1模型.pngRBAC1模型.png 带约束..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://b.bdstatic.com/comment/I4MgmLj55Sgosm2EdtLMDQf6b307cc01dbe865b7a8eab1ade21b7d.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"HeChuangJun"}],["meta",{"property":"article:published_time","content":"2023-01-01T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"权限系统设计\\",\\"image\\":[\\"https://b.bdstatic.com/comment/I4MgmLj55Sgosm2EdtLMDQf6b307cc01dbe865b7a8eab1ade21b7d.png\\",\\"https://b.bdstatic.com/comment/I4MgmLj55Sgosm2EdtLMDQ1e423b97f6fa092dedf8f329a288db84.png\\",\\"https://b.bdstatic.com/comment/I4MgmLj55Sgosm2EdtLMDQ10feea0cdf00ae97b3e9c109c8743de5.png\\",\\"https://b.bdstatic.com/comment/I4MgmLj55Sgosm2EdtLMDQ2d920358e1503293a949aa22594d7820.png\\",\\"https://b.bdstatic.com/comment/I4MgmLj55Sgosm2EdtLMDQea97800caf0aad24faf83ecc078dfdd6.png\\",\\"https://b.bdstatic.com/comment/I4MgmLj55Sgosm2EdtLMDQ87c51601cfd2a23d277594f77aff8db7.png\\",\\"https://b.bdstatic.com/comment/I4MgmLj55Sgosm2EdtLMDQ2a7a628a1022111565129984e09c60d1.png\\",\\"https://b.bdstatic.com/comment/I4MgmLj55Sgosm2EdtLMDQ07b3714f6edf7b20637d185c4d9cdfa4.png\\"],\\"datePublished\\":\\"2023-01-01T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"HeChuangJun\\",\\"url\\":\\"https://javaguide.cn/article/\\"}]}"]]},"headers":[{"level":2,"title":"为什么需要权限管理？设计？权限模型的演进？","slug":"为什么需要权限管理-设计-权限模型的演进","link":"#为什么需要权限管理-设计-权限模型的演进","children":[]},{"level":2,"title":"用户划分","slug":"用户划分","link":"#用户划分","children":[]},{"level":2,"title":"组织","slug":"组织","link":"#组织","children":[]},{"level":2,"title":"理想RBAC模型","slug":"理想rbac模型","link":"#理想rbac模型","children":[]},{"level":2,"title":"标准RBAC模型表设计","slug":"标准rbac模型表设计","link":"#标准rbac模型表设计","children":[]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":1.26,"words":377},"filePathRelative":"interview/scenedesign/authoritysystem.md","localizedDate":"2023年1月1日","excerpt":"<!-- more -->\\n<h2>为什么需要权限管理？设计？权限模型的演进？</h2>\\n<p>保证数据安全，不同岗位和级别看到的数据和操作数据的限制是不一样的</p>\\n<p>RBAC模型：角色、用户、权限都是多对多关系</p>\\n<figure><img src=\\"https://b.bdstatic.com/comment/I4MgmLj55Sgosm2EdtLMDQf6b307cc01dbe865b7a8eab1ade21b7d.png\\" alt=\\"RBAC模型.png\\" tabindex=\\"0\\"><figcaption>RBAC模型.png</figcaption></figure>\\n<p>角色继承的RBAC模型：下级角色只有一个上级角色，上级角色可以有多个下级角色。并且可以额外拥有其他权限</p>","autoDesc":true}');export{r as comp,b as data};
