import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as n,o as l,c as r,a as e,b as t,d,e as o}from"./app-7KT7HDzT.js";const s={},c=o(`<h1 id="_1-如何实现远程调用" tabindex="-1"><a class="header-anchor" href="#_1-如何实现远程调用"><span>1. 如何实现远程调用?</span></a></h1><ul><li>1、Webservice：效率不高基于soap协议。项目中不推荐使用。</li><li>2、使用restful形式的服务：http+json。很多项目中应用。如果服务太多，服务之间调用关系混乱，需要治疗服务。（不同语言不同公司使用）</li><li>3、使用dubbo。使用rpc协议进行远程调用，直接使用socket通信。传输效率高，并且可以统计出系统之间的调用关系、调用次数。（同语言使用）</li></ul><h1 id="_2-dubbo使用" tabindex="-1"><a class="header-anchor" href="#_2-dubbo使用"><span>2. Dubbo使用</span></a></h1><ul><li><p>Dubbo采用全Spring配置方式，透明化接入应用，对应用没有任何API侵入，只需用Spring加载Dubbo的配置即可，Dubbo基于Spring的Schema扩展进行加载。</p></li><li><p>远程服务中spring的配置，在本地服务的基础上，只需做简单配置，即可完成远程化：</p></li><li><p>将上面的local.xml配置拆分成两份，将服务定义部分放在服务提供方remote-provider.xml，将服务引用部分放在服务消费方remote-consumer.xml。并在提供方增加暴露服务配置<a href="dubbo:service">dubbo:service</a>，在消费方增加引用服务配置<a href="dubbo:reference">dubbo:reference</a></p></li></ul><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>	xmlns:dubbo=&quot;http://code.alibabatech.com/schema/dubbo&quot; 
	http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd
	以上两句配置在xml中
	&lt;!-- 使用dubbo发布服务 --&gt;
	&lt;!-- 提供方应用信息，用于计算依赖关系 --&gt;
	&lt;dubbo:application name=&quot;e3-manager&quot; /&gt;
	&lt;!-- 配置注册中心集群 --&gt;
	&lt;dubbo:registry protocol=&quot;zookeeper&quot;address=&quot;192.168.25.154:2181,192.168.25.154:2182,192.168.25.154:2183&quot; /&gt;
	&lt;!-- 用dubbo协议在20880端口暴露服务 --&gt;
	&lt;dubbo:protocol name=&quot;dubbo&quot; port=&quot;20880&quot; /&gt;
	
	&lt;bean id=&quot;xxx&quot; class=&quot;itemServiceImpl实现类&quot;&gt;
	&lt;!-- 声明需要暴露的服务接口 --&gt;
	&lt;dubbo:service interface=&quot;cn.e3mall.service.ItemService接口&quot; ref=&quot;xxx&quot; /&gt;


	xmlns:dubbo=&quot;http://code.alibabatech.com/schema/dubbo&quot; 
	http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd
	以上两句配置在xml中
	&lt;!-- 引用dubbo服务 --&gt;
	&lt;dubbo:application name=&quot;e3-manager-web&quot;/&gt;
	&lt;!-- 配置注册中心集群 --&gt;
	&lt;dubbo:registry protocol=&quot;zookeeper&quot; address=&quot;192.168.25.154:2181,192.168.25.154:2182,192.168.25.154:2183&quot;/&gt;
	
	&lt;dubbo:reference interface=&quot;cn.e3mall.service.ItemService接口&quot; id=&quot;itemService起一个名字，相当于bean的name&quot; /&gt;

	在controller层
	@Autowired
	private ItemService itemservice使用即可
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="_3-注册中心zookeeper" tabindex="-1"><a class="header-anchor" href="#_3-注册中心zookeeper"><span>3. 注册中心Zookeeper</span></a></h1><ul><li>官方推荐使用zookeeper注册中心。注册中心负责服务地址的注册与查找，相当于目录服务，服务提供者和消费者只在启动时与注册中心交互，注册中心不转发请求，压力较小。</li><li>使用dubbo-2.3.3以上版本，建议使用zookeeper注册中心。</li><li>Zookeeper是Apacahe Hadoop的子项目，是一个树型的目录服务，支持变更推送，</li><li>适合作为Dubbo服务的注册中心，工业强度较高，可用于生产环境，并推荐使用</li><li>Zookeeper优点： <ul><li>1、可以作为集群的管理工具使用。</li><li>2、可以集中管理配置文件。</li></ul></li></ul><h1 id="_4-dubbo的安装" tabindex="-1"><a class="header-anchor" href="#_4-dubbo的安装"><span>4. Dubbo的安装</span></a></h1>`,8),b=o("<li><p>第一步：安装jdk</p></li><li><p>第二步：把zookeeper的压缩包上传到linux系统（目录随意）</p></li><li><p>第三步：解压缩压缩包tar -zxvf zookeeper-3.4.6.tar.gz</p></li><li><p>第四步：进入zookeeper-3.4.6目录，创建data文件夹。</p></li><li><p>第五步：把zookeeper-3.4.6目录下的conf目录将zoo_sample.cfg改名为zoo.cfg ：mv zoo_sample.cfg zoo.cfg</p></li><li><p>第六步：修改zoo.cfg的data属性设置为data所在的目录：vim zoo.cfg然后输入i编辑 dataDir=/usr/zookeeper-3.4.6/data 然后Esc，然后:wq保存并退出</p></li><li><p>第七步：进入bin目录启动zookeeper</p><ul><li>./zkServer.sh start 关闭：./zkServer.sh stop 查看状态：./zkServer.sh status</li><li>注意：需要关闭防火墙。service iptables stop 永久关闭修改配置开机不启动防火墙：chkconfig iptables off</li><li>如果不能成功启动zookeeper，需要删除data目录下的zookeeper_server.pid文件。</li></ul></li><li><p>第八步：Dubbo监控中心的安装</p><ul><li>cp dubbo-admin-2.5.4.war apache-tomcat-7.0.47/webapps/dubbo-admin.war</li><li>进入tomcat的bin目录下启动tomcat</li></ul></li>",8),u={href:"http://192.168.25.167:8080/dubbo-admin/",target:"_blank",rel:"noopener noreferrer"},p=e("li",null,[e("p",null,"如果监控中心和注册中心在同一台服务器上，可以不需要任何配置。")],-1),m=e("li",null,[e("p",null,"如果不在同一台服务器，需要修改配置文件dubbo.properties：")],-1),v=o(`<div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>/root/apache-tomcat-7.0.47/webapps/dubbo-admin/WEB-INF/dubbo.properties
dubbo.registry.address=zookeeper://127.0.0.1:2181注册中心地址
dubbo.admin.root.password=root root用户的密码
dubbo.admin.guest.password=guest
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1);function h(g,f){const i=n("ExternalLinkIcon");return l(),r("div",null,[c,e("ul",null,[b,e("li",null,[e("p",null,[t("第九步：访问"),e("a",u,[t("http://192.168.25.167:8080/dubbo-admin/"),d(i)]),t(" 用户名：root密码：root")])]),p,m]),v])}const k=a(s,[["render",h],["__file","dubbo.html.vue"]]),q=JSON.parse('{"path":"/backend/serviceinvocation/dubbo.html","title":"Dubbo","lang":"zh-CN","frontmatter":{"title":"Dubbo","date":"2023-01-01T00:00:00.000Z","tags":"Dubbo","categories":"后端","description":"1. 如何实现远程调用? 1、Webservice：效率不高基于soap协议。项目中不推荐使用。 2、使用restful形式的服务：http+json。很多项目中应用。如果服务太多，服务之间调用关系混乱，需要治疗服务。（不同语言不同公司使用） 3、使用dubbo。使用rpc协议进行远程调用，直接使用socket通信。传输效率高，并且可以统计出系统之间的...","head":[["meta",{"property":"og:url","content":"https://javaguide.cn/backend/serviceinvocation/dubbo.html"}],["meta",{"property":"og:site_name","content":"JavaGuide"}],["meta",{"property":"og:title","content":"Dubbo"}],["meta",{"property":"og:description","content":"1. 如何实现远程调用? 1、Webservice：效率不高基于soap协议。项目中不推荐使用。 2、使用restful形式的服务：http+json。很多项目中应用。如果服务太多，服务之间调用关系混乱，需要治疗服务。（不同语言不同公司使用） 3、使用dubbo。使用rpc协议进行远程调用，直接使用socket通信。传输效率高，并且可以统计出系统之间的..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-12-07T01:56:33.000Z"}],["meta",{"property":"article:author","content":"HeChuangJun"}],["meta",{"property":"article:published_time","content":"2023-01-01T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-12-07T01:56:33.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Dubbo\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-01-01T00:00:00.000Z\\",\\"dateModified\\":\\"2024-12-07T01:56:33.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"HeChuangJun\\",\\"url\\":\\"https://javaguide.cn/article/\\"}]}"]]},"headers":[],"git":{"createdTime":1733536593000,"updatedTime":1733536593000,"contributors":[{"name":"HeChuangJun","email":"1105128664@qq.com","commits":1}]},"readingTime":{"minutes":3.28,"words":983},"filePathRelative":"backend/serviceinvocation/dubbo.md","localizedDate":"2023年1月1日","excerpt":"\\n<ul>\\n<li>1、Webservice：效率不高基于soap协议。项目中不推荐使用。</li>\\n<li>2、使用restful形式的服务：http+json。很多项目中应用。如果服务太多，服务之间调用关系混乱，需要治疗服务。（不同语言不同公司使用）</li>\\n<li>3、使用dubbo。使用rpc协议进行远程调用，直接使用socket通信。传输效率高，并且可以统计出系统之间的调用关系、调用次数。（同语言使用）</li>\\n</ul>\\n<h1>2. Dubbo使用</h1>\\n<ul>\\n<li>\\n<p>Dubbo采用全Spring配置方式，透明化接入应用，对应用没有任何API侵入，只需用Spring加载Dubbo的配置即可，Dubbo基于Spring的Schema扩展进行加载。</p>\\n</li>\\n<li>\\n<p>远程服务中spring的配置，在本地服务的基础上，只需做简单配置，即可完成远程化：</p>\\n</li>\\n<li>\\n<p>将上面的local.xml配置拆分成两份，将服务定义部分放在服务提供方remote-provider.xml，将服务引用部分放在服务消费方remote-consumer.xml。并在提供方增加暴露服务配置<a href=\\"dubbo:service\\">dubbo:service</a>，在消费方增加引用服务配置<a href=\\"dubbo:reference\\">dubbo:reference</a></p>\\n</li>\\n</ul>","autoDesc":true}');export{k as comp,q as data};
