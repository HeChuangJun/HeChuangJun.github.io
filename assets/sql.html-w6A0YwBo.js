import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,e as t}from"./app-7KT7HDzT.js";const e={},p=t(`<p>t_grade成绩表</p><table><thead><tr><th>name</th><th>kemu</th><th>fenshu</th></tr></thead><tbody><tr><td>张三</td><td>语文</td><td>81</td></tr><tr><td>张三</td><td>数学</td><td>72</td></tr><tr><td>李四</td><td>语文</td><td>76</td></tr><tr><td>李四</td><td>数学</td><td>90</td></tr></tbody></table><h2 id="case-when使用" tabindex="-1"><a class="header-anchor" href="#case-when使用"><span>CASE WHEN使用</span></a></h2><p>分数小于80为及格，大于等于80低于90分为中等；大于等于90分为优秀</p><table><thead><tr><th style="text-align:center;">name</th><th style="text-align:center;">kemu</th><th style="text-align:center;">fenshu</th></tr></thead><tbody><tr><td style="text-align:center;">张三</td><td style="text-align:center;">语文</td><td style="text-align:center;">中等</td></tr></tbody></table><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">select</span> name<span class="token punctuation">,</span>kemu<span class="token punctuation">,</span><span class="token keyword">case</span> <span class="token keyword">when</span> fenshu<span class="token operator">&gt;=</span><span class="token number">90</span> <span class="token keyword">then</span> <span class="token string">&#39;优秀&#39;</span> <span class="token keyword">when</span> fenshu<span class="token operator">&lt;</span><span class="token number">90</span> <span class="token operator">and</span> fenshu<span class="token operator">&gt;=</span><span class="token number">80</span> <span class="token keyword">then</span> <span class="token string">&#39;中等&#39;</span> 
<span class="token keyword">when</span> fenshu<span class="token operator">&lt;</span><span class="token number">80</span> <span class="token keyword">then</span> <span class="token string">&#39;合格&#39;</span> <span class="token keyword">end</span>  <span class="token keyword">as</span> fenshu <span class="token keyword">from</span> t_grade
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="分组及其组内比较" tabindex="-1"><a class="header-anchor" href="#分组及其组内比较"><span>分组及其组内比较</span></a></h2><p>查出每个学科低于平均分/60的学生(结果表头为：姓名、学科、分数、学科平均分)<br> 查出平均分临时表再连接原表</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> 
	a<span class="token punctuation">.</span>name<span class="token punctuation">,</span>a<span class="token punctuation">.</span>kemu<span class="token punctuation">,</span>a<span class="token punctuation">.</span>fenshu<span class="token punctuation">,</span>b<span class="token punctuation">.</span>aa
<span class="token keyword">FROM</span> 
	test a<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token keyword">SELECT</span> kemu<span class="token punctuation">,</span><span class="token function">AVG</span><span class="token punctuation">(</span>fenshu<span class="token punctuation">)</span> aa <span class="token keyword">FROM</span> test <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> kemu<span class="token punctuation">)</span> b
<span class="token keyword">WHERE</span> a<span class="token punctuation">.</span>kemu<span class="token operator">=</span>b<span class="token punctuation">.</span>kemu <span class="token operator">AND</span> a<span class="token punctuation">.</span>fenshu<span class="token operator">&lt;</span>b<span class="token punctuation">.</span>aa
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="都大于问题" tabindex="-1"><a class="header-anchor" href="#都大于问题"><span>都大于问题</span></a></h2><p>查出每门课都大于80分的学生姓名<br> 查出某条件下都大于都小于的数据（not in）</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> 
	name<span class="token punctuation">,</span>kemu<span class="token punctuation">,</span>fenshu 
<span class="token keyword">from</span> 
	t_grade 
<span class="token keyword">where</span> name <span class="token operator">not</span> <span class="token operator">in</span><span class="token punctuation">(</span><span class="token keyword">select</span> name <span class="token keyword">from</span> t_grade <span class="token keyword">where</span> fenshu<span class="token operator">&lt;=</span><span class="token number">80</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="行转列" tabindex="-1"><a class="header-anchor" href="#行转列"><span>行转列</span></a></h2><table><thead><tr><th>姓名</th><th>语文</th><th>数学</th></tr></thead><tbody><tr><td>张三</td><td>81</td><td>72</td></tr></tbody></table><p>先按某个条件分组通过max/sum(case when then)或者sum/max(IF())行转列，但列数有限制</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> 
	a<span class="token punctuation">.</span>name <span class="token string">&#39;分数&#39;</span><span class="token punctuation">,</span>a<span class="token punctuation">.</span>fenshu <span class="token string">&#39;语文&#39;</span><span class="token punctuation">,</span>b<span class="token punctuation">.</span>fenshu <span class="token string">&#39;数学&#39;</span>
<span class="token keyword">FROM</span> 
	<span class="token punctuation">(</span><span class="token keyword">SELECT</span> NAME<span class="token punctuation">,</span>fenshu <span class="token keyword">FROM</span> test <span class="token keyword">WHERE</span> kemu<span class="token operator">=</span><span class="token string">&#39;语文&#39;</span><span class="token punctuation">)</span> a<span class="token punctuation">,</span>
	<span class="token punctuation">(</span><span class="token keyword">SELECT</span> NAME<span class="token punctuation">,</span>fenshu <span class="token keyword">FROM</span> test <span class="token keyword">WHERE</span> kemu<span class="token operator">=</span><span class="token string">&#39;数学&#39;</span><span class="token punctuation">)</span> b
<span class="token keyword">WHERE</span> 
	a<span class="token punctuation">.</span>name<span class="token operator">=</span>b<span class="token punctuation">.</span>name<span class="token punctuation">;</span>

<span class="token keyword">SELECT</span>
	name <span class="token keyword">as</span> 姓名<span class="token punctuation">,</span>
	<span class="token function">MAX</span><span class="token punctuation">(</span>
		<span class="token keyword">CASE</span> 
		<span class="token keyword">WHEN</span>  kemu<span class="token operator">=</span><span class="token string">&#39;语文&#39;</span> <span class="token keyword">THEN</span>
			fenshu
		<span class="token keyword">END</span>
	<span class="token punctuation">)</span> <span class="token keyword">AS</span> 语文<span class="token punctuation">,</span>
	<span class="token function">MAX</span><span class="token punctuation">(</span>
		<span class="token keyword">CASE</span> 
		<span class="token keyword">WHEN</span> kemu<span class="token operator">=</span><span class="token string">&#39;数学&#39;</span> <span class="token keyword">THEN</span>
			fenshu
		<span class="token keyword">END</span>
	<span class="token punctuation">)</span> <span class="token keyword">AS</span> 数学 
<span class="token keyword">FROM</span>
	t_grade
<span class="token keyword">GROUP</span> <span class="token keyword">BY</span> name
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="列转行" tabindex="-1"><a class="header-anchor" href="#列转行"><span>列转行</span></a></h2><p>将上面的结果变回例子的样子</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">select</span> name<span class="token punctuation">,</span> <span class="token string">&#39;语文&#39;</span> kemu <span class="token punctuation">,</span> 语文 <span class="token keyword">as</span> SCORE <span class="token keyword">from</span> t_grade
<span class="token keyword">union</span> <span class="token keyword">select</span> name<span class="token punctuation">,</span> <span class="token string">&#39;数学&#39;</span> kemu<span class="token punctuation">,</span> 数学 <span class="token keyword">as</span> SCORE <span class="token keyword">from</span> t_grade
<span class="token keyword">union</span> <span class="token keyword">select</span> name<span class="token punctuation">,</span> <span class="token string">&#39;英语&#39;</span> kemu<span class="token punctuation">,</span> 英语 <span class="token keyword">as</span> SCORE <span class="token keyword">from</span> t_grade
<span class="token keyword">order</span> <span class="token keyword">by</span> name<span class="token punctuation">,</span>kemu<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="topn问题" tabindex="-1"><a class="header-anchor" href="#topn问题"><span>TopN问题</span></a></h2><p>求出第二(n)高/低的薪水<br> 第2高：select max(distinct 字段) from table where 字段&lt; (select max(distinct 字段) from table group by 分组字段) where 条件<br> 第/前N高：select distinct 字段 FROM table t1 where (SELECT count(distinct 字段) from table t2 WHERE t2.字段 &gt; t1.字段) = n-1/&lt; n<br> 第几：select 字段,(select count(distinct 字段) from table t2 where t2.字段 &gt;= t1.字段) from Scores t1 order by 字段 DESC</p><p>Employee 表包含所有员工信息，工号Id，姓名Name，工资Salary和部门编号DepartmentId</p><table><thead><tr><th style="text-align:center;">Id</th><th style="text-align:center;">Name</th><th style="text-align:center;">Salary</th><th style="text-align:center;">DepartmentId</th></tr></thead><tbody><tr><td style="text-align:center;">1</td><td style="text-align:center;">Joe</td><td style="text-align:center;">85000</td><td style="text-align:center;">1</td></tr><tr><td style="text-align:center;">2</td><td style="text-align:center;">Henry</td><td style="text-align:center;">80000</td><td style="text-align:center;">2</td></tr><tr><td style="text-align:center;">3</td><td style="text-align:center;">Sam</td><td style="text-align:center;">60000</td><td style="text-align:center;">2</td></tr><tr><td style="text-align:center;">4</td><td style="text-align:center;">Max</td><td style="text-align:center;">90000</td><td style="text-align:center;">1</td></tr><tr><td style="text-align:center;">5</td><td style="text-align:center;">Janet</td><td style="text-align:center;">69000</td><td style="text-align:center;">1</td></tr><tr><td style="text-align:center;">6</td><td style="text-align:center;">Randy</td><td style="text-align:center;">85000</td><td style="text-align:center;">1</td></tr><tr><td style="text-align:center;">7</td><td style="text-align:center;">Will</td><td style="text-align:center;">70000</td><td style="text-align:center;">1</td></tr></tbody></table><p>Department表包含所有部门</p><table><thead><tr><th style="text-align:center;">Id</th><th style="text-align:center;">Name</th></tr></thead><tbody><tr><td style="text-align:center;">1</td><td style="text-align:center;">IT</td></tr><tr><td style="text-align:center;">2</td><td style="text-align:center;">Sales</td></tr></tbody></table><p>找出每个部门获得前三高工资的所有员工</p><table><thead><tr><th style="text-align:center;">Department</th><th style="text-align:center;">Employee</th><th style="text-align:center;">Salary</th></tr></thead><tbody><tr><td style="text-align:center;">IT</td><td style="text-align:center;">Max</td><td style="text-align:center;">90000</td></tr><tr><td style="text-align:center;">IT</td><td style="text-align:center;">Randy</td><td style="text-align:center;">85000</td></tr><tr><td style="text-align:center;">IT</td><td style="text-align:center;">Joe</td><td style="text-align:center;">85000</td></tr><tr><td style="text-align:center;">IT</td><td style="text-align:center;">Will</td><td style="text-align:center;">70000</td></tr><tr><td style="text-align:center;">Sales</td><td style="text-align:center;">Henry</td><td style="text-align:center;">80000</td></tr><tr><td style="text-align:center;">Sales</td><td style="text-align:center;">Sam</td><td style="text-align:center;">60000</td></tr></tbody></table><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span>
	d<span class="token punctuation">.</span>NAME <span class="token keyword">AS</span> Department<span class="token punctuation">,</span>
	e<span class="token punctuation">.</span>NAME <span class="token keyword">AS</span> Employee<span class="token punctuation">,</span>
	e<span class="token punctuation">.</span>Salary <span class="token keyword">AS</span> Salary 
<span class="token keyword">FROM</span>
	employee e
	<span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span> Department d <span class="token keyword">ON</span> d<span class="token punctuation">.</span>id <span class="token operator">=</span> e<span class="token punctuation">.</span>DepartmentId 
<span class="token keyword">WHERE</span>
	e<span class="token punctuation">.</span>id <span class="token operator">IN</span> <span class="token punctuation">(</span>
	<span class="token keyword">SELECT</span>
		e1<span class="token punctuation">.</span>id 
	<span class="token keyword">FROM</span>
		Employee e1
		<span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span> Employee e2 <span class="token keyword">ON</span> e2<span class="token punctuation">.</span>DepartmentId <span class="token operator">=</span> e1<span class="token punctuation">.</span>DepartmentId 
		<span class="token operator">AND</span> e2<span class="token punctuation">.</span>Salary <span class="token operator">&gt;</span> e1<span class="token punctuation">.</span>Salary 
	<span class="token keyword">GROUP</span> <span class="token keyword">BY</span>
		e1<span class="token punctuation">.</span>Id 
	<span class="token keyword">HAVING</span>
		<span class="token function">count</span><span class="token punctuation">(</span> <span class="token keyword">DISTINCT</span> e2<span class="token punctuation">.</span>Salary <span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token number">2</span> <span class="token comment">--选取top几</span>
	<span class="token punctuation">)</span> 
<span class="token operator">and</span> e<span class="token punctuation">.</span>DepartmentId <span class="token operator">in</span> <span class="token punctuation">(</span><span class="token keyword">select</span> Id <span class="token keyword">from</span> Department<span class="token punctuation">)</span> 补全数据，不用补全的话不用加上这句
<span class="token keyword">ORDER</span> <span class="token keyword">BY</span>
	d<span class="token punctuation">.</span>Id <span class="token keyword">ASC</span><span class="token punctuation">,</span>
	e<span class="token punctuation">.</span>Salary <span class="token keyword">DESC</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>获取Employee表中第二高薪水（Salary），返回200，如果不存在第二高的薪水，那么查询应返回 null</p><h2 id="删除重复数据" tabindex="-1"><a class="header-anchor" href="#删除重复数据"><span>删除重复数据</span></a></h2><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token comment">-- 只保留最小id的记录</span>
<span class="token keyword">DELETE</span> <span class="token keyword">FROM</span> student <span class="token keyword">WHERE</span> id <span class="token operator">IN</span> <span class="token punctuation">(</span>
    <span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> <span class="token punctuation">(</span>
        <span class="token keyword">SELECT</span> id <span class="token keyword">FROM</span> student <span class="token keyword">WHERE</span> <span class="token punctuation">(</span>stuno<span class="token punctuation">,</span>stuname<span class="token punctuation">)</span> <span class="token comment">-- 加括号当成联合字段来处理</span>
        <span class="token operator">IN</span> <span class="token punctuation">(</span>
            <span class="token comment">-- 查找学号和姓名均重复的学生信息</span>
            <span class="token keyword">SELECT</span> stuno<span class="token punctuation">,</span>stuname <span class="token keyword">FROM</span> student <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> stuno<span class="token punctuation">,</span>stuname <span class="token keyword">HAVING</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">1</span>
        <span class="token punctuation">)</span> <span class="token operator">AND</span> id <span class="token operator">NOT</span> <span class="token operator">IN</span> <span class="token punctuation">(</span>
            <span class="token comment">-- 查询最小id的记录</span>
            <span class="token keyword">SELECT</span> <span class="token function">MIN</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span> <span class="token keyword">FROM</span> student <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> stuno<span class="token punctuation">,</span>stuname <span class="token keyword">HAVING</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">1</span>
        <span class="token punctuation">)</span>
    <span class="token punctuation">)</span> <span class="token keyword">AS</span> stu_repeat_copy
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="查找每个学科分数低于60的人数" tabindex="-1"><a class="header-anchor" href="#查找每个学科分数低于60的人数"><span>查找每个学科分数低于60的人数</span></a></h2><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">\`</span>xueke<span class="token punctuation">\`</span></span>  <span class="token punctuation">(</span>
  <span class="token identifier"><span class="token punctuation">\`</span>id<span class="token punctuation">\`</span></span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">,</span>
  <span class="token identifier"><span class="token punctuation">\`</span>tid<span class="token punctuation">\`</span></span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>
  <span class="token identifier"><span class="token punctuation">\`</span>sid<span class="token punctuation">\`</span></span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>
  <span class="token identifier"><span class="token punctuation">\`</span>name<span class="token punctuation">\`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token keyword">CHARACTER</span> <span class="token keyword">SET</span> utf8mb4 <span class="token keyword">COLLATE</span> utf8mb4_general_ci <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>
  <span class="token identifier"><span class="token punctuation">\`</span>score<span class="token punctuation">\`</span></span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>
  <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">\`</span>id<span class="token punctuation">\`</span></span><span class="token punctuation">)</span> <span class="token keyword">USING</span> <span class="token keyword">BTREE</span>
<span class="token punctuation">)</span> <span class="token keyword">ENGINE</span> <span class="token operator">=</span> <span class="token keyword">InnoDB</span> <span class="token keyword">AUTO_INCREMENT</span> <span class="token operator">=</span> <span class="token number">8</span> <span class="token keyword">CHARACTER</span> <span class="token keyword">SET</span> <span class="token operator">=</span> latin1 <span class="token keyword">COLLATE</span> <span class="token operator">=</span> latin1_swedish_ci ROW_FORMAT <span class="token operator">=</span> Compact<span class="token punctuation">;</span>

<span class="token comment">-- ----------------------------</span>
<span class="token comment">-- Records of xueke</span>
<span class="token comment">-- ----------------------------</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token identifier"><span class="token punctuation">\`</span>xueke<span class="token punctuation">\`</span></span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;数学&#39;</span><span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token identifier"><span class="token punctuation">\`</span>xueke<span class="token punctuation">\`</span></span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;数学&#39;</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token identifier"><span class="token punctuation">\`</span>xueke<span class="token punctuation">\`</span></span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">&#39;英语&#39;</span><span class="token punctuation">,</span> <span class="token number">61</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token identifier"><span class="token punctuation">\`</span>xueke<span class="token punctuation">\`</span></span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token string">&#39;英语&#39;</span><span class="token punctuation">,</span> <span class="token number">59</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token identifier"><span class="token punctuation">\`</span>xueke<span class="token punctuation">\`</span></span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token string">&#39;语文&#39;</span><span class="token punctuation">,</span> <span class="token number">62</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token identifier"><span class="token punctuation">\`</span>xueke<span class="token punctuation">\`</span></span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token string">&#39;语文&#39;</span><span class="token punctuation">,</span> <span class="token number">58</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token identifier"><span class="token punctuation">\`</span>xueke<span class="token punctuation">\`</span></span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token string">&#39;数学&#39;</span><span class="token punctuation">,</span> <span class="token number">81</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">select</span> name<span class="token punctuation">,</span><span class="token function">count</span><span class="token punctuation">(</span>sid<span class="token punctuation">)</span> <span class="token keyword">from</span> xueke <span class="token keyword">where</span> score <span class="token operator">&lt;</span> <span class="token number">60</span> <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> name<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="去除最高值与最低值的平均问题" tabindex="-1"><a class="header-anchor" href="#去除最高值与最低值的平均问题"><span>去除最高值与最低值的平均问题</span></a></h2><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span>
	t<span class="token punctuation">.</span>cid<span class="token punctuation">,</span>
	<span class="token function">round</span><span class="token punctuation">(</span><span class="token function">AVG</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>saleMoney<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&#39;平均值&#39;</span>
<span class="token keyword">FROM</span>
<span class="token punctuation">(</span>
<span class="token keyword">SELECT</span>
	a<span class="token punctuation">.</span><span class="token keyword">date</span><span class="token punctuation">,</span>
	a<span class="token punctuation">.</span>cid<span class="token punctuation">,</span>
	a<span class="token punctuation">.</span>saleMoney<span class="token punctuation">,</span>
	RANK<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">over</span><span class="token punctuation">(</span><span class="token keyword">partition</span> <span class="token keyword">by</span> a<span class="token punctuation">.</span>cid <span class="token keyword">order</span> <span class="token keyword">by</span> a<span class="token punctuation">.</span>saleMoney<span class="token punctuation">)</span> <span class="token keyword">as</span> rank1<span class="token punctuation">,</span>
	RANK<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">over</span><span class="token punctuation">(</span><span class="token keyword">partition</span> <span class="token keyword">by</span> a<span class="token punctuation">.</span>cid <span class="token keyword">order</span> <span class="token keyword">by</span> a<span class="token punctuation">.</span>saleMoney <span class="token keyword">desc</span><span class="token punctuation">)</span> <span class="token keyword">as</span> rank2
<span class="token keyword">FROM</span>
	city_sale a
<span class="token keyword">GROUP</span> <span class="token keyword">BY</span> a<span class="token punctuation">.</span><span class="token keyword">date</span><span class="token punctuation">,</span>a<span class="token punctuation">.</span>cid
<span class="token punctuation">)</span>t
<span class="token keyword">WHERE</span> t<span class="token punctuation">.</span>rank1<span class="token operator">&gt;</span><span class="token number">1</span> 
<span class="token operator">and</span> t<span class="token punctuation">.</span>rank2<span class="token operator">&gt;</span><span class="token number">1</span>
<span class="token keyword">GROUP</span> <span class="token keyword">BY</span> t<span class="token punctuation">.</span>cid
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="lead、lag函数平移列-求记录之间的差值最大值或者最小值" tabindex="-1"><a class="header-anchor" href="#lead、lag函数平移列-求记录之间的差值最大值或者最小值"><span>lead、lag函数平移列（求记录之间的差值最大值或者最小值）</span></a></h2><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">select</span> 
	t2<span class="token punctuation">.</span>uid<span class="token punctuation">,</span>
	<span class="token function">count</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
	<span class="token function">min</span><span class="token punctuation">(</span>t2<span class="token punctuation">.</span>minute2<span class="token punctuation">)</span>
<span class="token keyword">from</span>
<span class="token punctuation">(</span>
<span class="token keyword">select</span> <span class="token operator">*</span><span class="token punctuation">,</span>
	TIMESTAMPDIFF<span class="token punctuation">(</span><span class="token keyword">MINUTE</span><span class="token punctuation">,</span>t<span class="token punctuation">.</span>crtime<span class="token punctuation">,</span>t<span class="token punctuation">.</span>rank1<span class="token punctuation">)</span> minute2
<span class="token keyword">from</span> 
<span class="token punctuation">(</span>
<span class="token keyword">SELECT</span>
	a<span class="token punctuation">.</span>uid<span class="token punctuation">,</span>
	a<span class="token punctuation">.</span>crtime<span class="token punctuation">,</span>
	lead<span class="token punctuation">(</span>a<span class="token punctuation">.</span>crtime<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">over</span><span class="token punctuation">(</span><span class="token keyword">PARTITION</span> <span class="token keyword">BY</span> a<span class="token punctuation">.</span>uid <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> a<span class="token punctuation">.</span>crtime<span class="token punctuation">)</span> <span class="token keyword">as</span> rank1
<span class="token keyword">FROM</span>
	user_sale a
<span class="token punctuation">)</span>t
<span class="token punctuation">)</span>t2
<span class="token keyword">where</span> t2<span class="token punctuation">.</span>minute2<span class="token operator">&gt;</span><span class="token number">0</span>
<span class="token keyword">GROUP</span> <span class="token keyword">BY</span> t2<span class="token punctuation">.</span>uid
<span class="token keyword">ORDER</span> <span class="token keyword">BY</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">desc</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="中位数" tabindex="-1"><a class="header-anchor" href="#中位数"><span>中位数</span></a></h2><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token comment">## 单个cid的中位数</span>

<span class="token keyword">SELECT</span>
	<span class="token function">avg</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>saleMoney<span class="token punctuation">)</span>
<span class="token keyword">FROM</span>
<span class="token punctuation">(</span>
<span class="token keyword">SELECT</span>
	a<span class="token punctuation">.</span>cid<span class="token punctuation">,</span>
	a<span class="token punctuation">.</span>saleMoney<span class="token punctuation">,</span>
	row_number<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">over</span><span class="token punctuation">(</span><span class="token keyword">ORDER</span> <span class="token keyword">BY</span> a<span class="token punctuation">.</span>saleMoney <span class="token keyword">desc</span><span class="token punctuation">)</span> rank1<span class="token punctuation">,</span>
	row_number<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">over</span><span class="token punctuation">(</span><span class="token keyword">ORDER</span> <span class="token keyword">BY</span> a<span class="token punctuation">.</span>saleMoney<span class="token punctuation">)</span> rank2
<span class="token keyword">FROM</span>
	city_sale a
<span class="token keyword">where</span> a<span class="token punctuation">.</span>cid<span class="token operator">=</span><span class="token number">10240</span>
<span class="token punctuation">)</span>t
<span class="token keyword">where</span>  t<span class="token punctuation">.</span>rank1<span class="token operator">=</span>t<span class="token punctuation">.</span>rank2<span class="token operator">+</span><span class="token number">1</span> <span class="token operator">or</span> t<span class="token punctuation">.</span>rank1<span class="token operator">=</span>t<span class="token punctuation">.</span>rank2<span class="token operator">-</span><span class="token number">1</span> <span class="token operator">or</span> rank1<span class="token operator">=</span>rank2

<span class="token comment">## 分组求中位数</span>

<span class="token keyword">SELECT</span>
	t<span class="token punctuation">.</span>cid<span class="token punctuation">,</span>
	<span class="token function">avg</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>saleMoney<span class="token punctuation">)</span>
<span class="token keyword">FROM</span>
<span class="token punctuation">(</span>
<span class="token keyword">SELECT</span>
	a<span class="token punctuation">.</span>cid<span class="token punctuation">,</span>
	a<span class="token punctuation">.</span>saleMoney<span class="token punctuation">,</span>
	row_number<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">over</span><span class="token punctuation">(</span><span class="token keyword">PARTITION</span> <span class="token keyword">by</span> a<span class="token punctuation">.</span>cid <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> a<span class="token punctuation">.</span>saleMoney <span class="token keyword">desc</span><span class="token punctuation">)</span> rank1<span class="token punctuation">,</span>
	row_number<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">over</span><span class="token punctuation">(</span><span class="token keyword">PARTITION</span> <span class="token keyword">by</span> a<span class="token punctuation">.</span>cid <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> a<span class="token punctuation">.</span>saleMoney<span class="token punctuation">)</span> rank2
<span class="token keyword">FROM</span>
	city_sale a
<span class="token punctuation">)</span>t
<span class="token keyword">where</span>  t<span class="token punctuation">.</span>rank1<span class="token operator">=</span>t<span class="token punctuation">.</span>rank2<span class="token operator">+</span><span class="token number">1</span> <span class="token operator">or</span> t<span class="token punctuation">.</span>rank1<span class="token operator">=</span>t<span class="token punctuation">.</span>rank2<span class="token operator">-</span><span class="token number">1</span> <span class="token operator">or</span> rank1<span class="token operator">=</span>rank2

<span class="token keyword">GROUP</span> <span class="token keyword">BY</span> t<span class="token punctuation">.</span>cid
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,39),o=[p];function l(c,i){return s(),a("div",null,o)}const r=n(e,[["render",l],["__file","sql.html.vue"]]),k=JSON.parse('{"path":"/interview/db/sql.html","title":"SQL","lang":"zh-CN","frontmatter":{"title":"SQL","date":"2023-01-01T00:00:00.000Z","tags":"java","categories":"面试","description":"t_grade成绩表 CASE WHEN使用 分数小于80为及格，大于等于80低于90分为中等；大于等于90分为优秀 分组及其组内比较 查出每个学科低于平均分/60的学生(结果表头为：姓名、学科、分数、学科平均分) 查出平均分临时表再连接原表 都大于问题 查出每门课都大于80分的学生姓名 查出某条件下都大于都小于的数据（not in） 行转列 先按某个...","head":[["meta",{"property":"og:url","content":"https://javaguide.cn/interview/db/sql.html"}],["meta",{"property":"og:site_name","content":"JavaGuide"}],["meta",{"property":"og:title","content":"SQL"}],["meta",{"property":"og:description","content":"t_grade成绩表 CASE WHEN使用 分数小于80为及格，大于等于80低于90分为中等；大于等于90分为优秀 分组及其组内比较 查出每个学科低于平均分/60的学生(结果表头为：姓名、学科、分数、学科平均分) 查出平均分临时表再连接原表 都大于问题 查出每门课都大于80分的学生姓名 查出某条件下都大于都小于的数据（not in） 行转列 先按某个..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"HeChuangJun"}],["meta",{"property":"article:published_time","content":"2023-01-01T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"SQL\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-01-01T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"HeChuangJun\\",\\"url\\":\\"https://javaguide.cn/article/\\"}]}"]]},"headers":[{"level":2,"title":"CASE WHEN使用","slug":"case-when使用","link":"#case-when使用","children":[]},{"level":2,"title":"分组及其组内比较","slug":"分组及其组内比较","link":"#分组及其组内比较","children":[]},{"level":2,"title":"都大于问题","slug":"都大于问题","link":"#都大于问题","children":[]},{"level":2,"title":"行转列","slug":"行转列","link":"#行转列","children":[]},{"level":2,"title":"列转行","slug":"列转行","link":"#列转行","children":[]},{"level":2,"title":"TopN问题","slug":"topn问题","link":"#topn问题","children":[]},{"level":2,"title":"删除重复数据","slug":"删除重复数据","link":"#删除重复数据","children":[]},{"level":2,"title":"查找每个学科分数低于60的人数","slug":"查找每个学科分数低于60的人数","link":"#查找每个学科分数低于60的人数","children":[]},{"level":2,"title":"去除最高值与最低值的平均问题","slug":"去除最高值与最低值的平均问题","link":"#去除最高值与最低值的平均问题","children":[]},{"level":2,"title":"lead、lag函数平移列（求记录之间的差值最大值或者最小值）","slug":"lead、lag函数平移列-求记录之间的差值最大值或者最小值","link":"#lead、lag函数平移列-求记录之间的差值最大值或者最小值","children":[]},{"level":2,"title":"中位数","slug":"中位数","link":"#中位数","children":[]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":4.09,"words":1228},"filePathRelative":"interview/db/sql.md","localizedDate":"2023年1月1日","excerpt":"<!-- TOC -->\\n<!-- /TOC -->\\n<p>t_grade成绩表</p>\\n<table>\\n<thead>\\n<tr>\\n<th>name</th>\\n<th>kemu</th>\\n<th>fenshu</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>张三</td>\\n<td>语文</td>\\n<td>81</td>\\n</tr>\\n<tr>\\n<td>张三</td>\\n<td>数学</td>\\n<td>72</td>\\n</tr>\\n<tr>\\n<td>李四</td>\\n<td>语文</td>\\n<td>76</td>\\n</tr>\\n<tr>\\n<td>李四</td>\\n<td>数学</td>\\n<td>90</td>\\n</tr>\\n</tbody>\\n</table>","autoDesc":true}');export{r as comp,k as data};
